// Generated by gencpp from file sensors/RegistrationService.msg
// DO NOT EDIT!


#ifndef SENSORS_MESSAGE_REGISTRATIONSERVICE_H
#define SENSORS_MESSAGE_REGISTRATIONSERVICE_H

#include <ros/service_traits.h>


#include <sensors/RegistrationServiceRequest.h>
#include <sensors/RegistrationServiceResponse.h>


namespace sensors
{

struct RegistrationService
{

typedef RegistrationServiceRequest Request;
typedef RegistrationServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RegistrationService
} // namespace sensors


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::sensors::RegistrationService > {
  static const char* value()
  {
    return "8c8e7f7b21963192fb9e2b408247fa79";
  }

  static const char* value(const ::sensors::RegistrationService&) { return value(); }
};

template<>
struct DataType< ::sensors::RegistrationService > {
  static const char* value()
  {
    return "sensors/RegistrationService";
  }

  static const char* value(const ::sensors::RegistrationService&) { return value(); }
};


// service_traits::MD5Sum< ::sensors::RegistrationServiceRequest> should match 
// service_traits::MD5Sum< ::sensors::RegistrationService > 
template<>
struct MD5Sum< ::sensors::RegistrationServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sensors::RegistrationService >::value();
  }
  static const char* value(const ::sensors::RegistrationServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensors::RegistrationServiceRequest> should match 
// service_traits::DataType< ::sensors::RegistrationService > 
template<>
struct DataType< ::sensors::RegistrationServiceRequest>
{
  static const char* value()
  {
    return DataType< ::sensors::RegistrationService >::value();
  }
  static const char* value(const ::sensors::RegistrationServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sensors::RegistrationServiceResponse> should match 
// service_traits::MD5Sum< ::sensors::RegistrationService > 
template<>
struct MD5Sum< ::sensors::RegistrationServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sensors::RegistrationService >::value();
  }
  static const char* value(const ::sensors::RegistrationServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensors::RegistrationServiceResponse> should match 
// service_traits::DataType< ::sensors::RegistrationService > 
template<>
struct DataType< ::sensors::RegistrationServiceResponse>
{
  static const char* value()
  {
    return DataType< ::sensors::RegistrationService >::value();
  }
  static const char* value(const ::sensors::RegistrationServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SENSORS_MESSAGE_REGISTRATIONSERVICE_H
